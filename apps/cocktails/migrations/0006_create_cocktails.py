# Generated by Django 3.0 on 2022-01-23 14:59
import requests

from django.db import migrations


INGREDIENTS_URL = 'https://raw.githubusercontent.com/mikeyhogarth/cocktails/0a60c6502964918df17b4c3d42e509b8a77e19bc/src/data/ingredients.json'
GLASSES_URL = 'https://raw.githubusercontent.com/mikeyhogarth/cocktails/0a60c6502964918df17b4c3d42e509b8a77e19bc/src/data/glasses.json'
COCKTAILS_URL = 'https://raw.githubusercontent.com/mikeyhogarth/cocktails/0a60c6502964918df17b4c3d42e509b8a77e19bc/src/data/cocktails.json'


def make_ingredients(apps, schema_editor):
    Ingredient = apps.get_model('cocktails', 'Ingredient')

    ingredients_data = requests.get(INGREDIENTS_URL).json()
    for name, info in ingredients_data.items():
        name = name.lower().strip()
        abv = info.get('abv', 0)
        ingredient, _ = Ingredient.objects.get_or_create(
            name=name, defaults={'abv': abv, 'units': 'cl'}
        )


def make_glasses(apps, schema_editor):
    Glass = apps.get_model('cocktails', 'Glass')

    glasses_data = requests.get(GLASSES_URL).json()
    for name in glasses_data:
        name = name.lower().strip()
        Glass.objects.get_or_create(name=name)


def make_cocktails(apps, schema_editor):
    Glass = apps.get_model('cocktails', 'Glass')
    Cocktail = apps.get_model('cocktails', 'Cocktail')
    Category = apps.get_model('cocktails', 'Category')
    Ingredient = apps.get_model('cocktails', 'Ingredient')

    cocktails_data = requests.get(COCKTAILS_URL).json()
    for cocktail_raw in cocktails_data:
        name = cocktail_raw['name'].lower().strip()
        iba = cocktail_raw.get('iba', False)
        glass = Glass.objects.get(name=cocktail_raw['glass'])
        colors = cocktail_raw.get('colors', [])
        if not isinstance(colors, list):
            colors = [colors]
        category_raw = cocktail_raw.get('category', 'empty')
        category_name = category_raw.lower().strip()
        category, _ = Category.objects.get_or_create(name=category_name)
        garnish = [cocktail_raw.get('garnish', "")]
        recipe = cocktail_raw.get('preparation', 'empty')

        ingredients = []
        for ingredient_raw in cocktail_raw.get('ingredients', []):
            ingredient_name = ingredient_raw.get('ingredient')
            if ingredient_name:
                ingredient_name = ingredient_name.lower().strip()
                ingredient, _ = Ingredient.objects.get_or_create(
                    name=ingredient_name, defaults={'units': 'cl'}
                )
                ingredients.append(ingredient)

        cocktail, created = Cocktail.objects.get_or_create(
            name=name, defaults={
                'category': category,
                'glass': glass,
                'iba': iba,
                'color': colors,
                'garnish': garnish,
                'recipe': recipe
            }
        )
        if created:
            cocktail.ingredients.set(ingredients)


class Migration(migrations.Migration):

    dependencies = [
        ('cocktails', '0005_auto_20220121_0809'),
    ]

    operations = [
        migrations.RunPython(make_ingredients),
        migrations.RunPython(make_glasses),
        migrations.RunPython(make_cocktails),
    ]
